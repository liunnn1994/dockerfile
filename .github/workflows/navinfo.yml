name: Build Navinfo Docker Image

on:
  push:
    branches:
      - main

env:
  GIT_USER: liu
  GIT_EMAIL: liunian@2077tech.com
  ALIYUN_REGISTRY: registry.cn-beijing.aliyuncs.com
  ALIYUN_NAMESPACE: navinfo_fe
  ALIYUN_IMAGE_NAME: navinfo

jobs:
  build:
    name: Build on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install

      - name: Update version
        run: |
          npm run navinfo

      - name: Update version
        id: set_var
        run: |
          content=`cat versions.json | jq '.navinfo'`
          echo "::set-output name=VERSION::$content"

      # 设置 QEMU, 后面 docker buildx 依赖此.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 设置 Docker buildx, 方便构建 Multi platform 镜像
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 登录 阿里云镜像仓库
      - name: Login to Aliyun
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./navinfo/Dockerfile
          push: true
          tags: |
            ${{ env.ALIYUN_NAMESPACE }}/${{ env.ALIYUN_IMAGE_NAME }}:latest
            ${{ env.ALIYUN_NAMESPACE }}/${{ env.ALIYUN_IMAGE_NAME }}:${{steps.set_var.outputs.VERSION}}

      - name: Commit version
        run: |
          git config --global user.name $GIT_USER
          git config --global user.email $GIT_EMAIL
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated report"
          git push
